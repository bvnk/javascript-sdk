/**
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, and digital wallet transactions.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AcceptedQuoteDto from './model/AcceptedQuoteDto';
import AccountMethodDto from './model/AccountMethodDto';
import AlternativeAddressDto from './model/AlternativeAddressDto';
import BalanceDto from './model/BalanceDto';
import ClientValidationErrorDto from './model/ClientValidationErrorDto';
import CryptoAddressDto from './model/CryptoAddressDto';
import CurrencyDto from './model/CurrencyDto';
import CurrencyFiatDto from './model/CurrencyFiatDto';
import CurrencyOptions from './model/CurrencyOptions';
import CurrencyProtocol from './model/CurrencyProtocol';
import DirectionDto from './model/DirectionDto';
import ExchangeRateDto from './model/ExchangeRateDto';
import ExternalCurrencyWithdrawalParameter from './model/ExternalCurrencyWithdrawalParameter';
import FeeDto from './model/FeeDto';
import FeesDto from './model/FeesDto';
import FormDto from './model/FormDto';
import GatewayTransactionDto from './model/GatewayTransactionDto';
import MerchantChannelDto from './model/MerchantChannelDto';
import MerchantChannelPaymentDto from './model/MerchantChannelPaymentDto';
import MerchantChannelRequestDto from './model/MerchantChannelRequestDto';
import MerchantDto from './model/MerchantDto';
import MerchantIdCreateRequest from './model/MerchantIdCreateRequest';
import MerchantIdCreateRequestWallet from './model/MerchantIdCreateRequestWallet';
import NetworkFeeDto from './model/NetworkFeeDto';
import PayAmountsDto from './model/PayAmountsDto';
import PayInDetailDto from './model/PayInDetailDto';
import PayInInstructionDto from './model/PayInInstructionDto';
import PayInMethodDto from './model/PayInMethodDto';
import PayOutDetailDto from './model/PayOutDetailDto';
import PayOutInstructionDto from './model/PayOutInstructionDto';
import PayOutMethodDto from './model/PayOutMethodDto';
import PayRequestDto from './model/PayRequestDto';
import PaymentLegDto from './model/PaymentLegDto';
import PaymentStatusDto from './model/PaymentStatusDto';
import QuoteDto from './model/QuoteDto';
import QuoteRequestDto from './model/QuoteRequestDto';
import ServerErrorDto from './model/ServerErrorDto';
import SummaryPaymentDto from './model/SummaryPaymentDto';
import TransactionReportDto from './model/TransactionReportDto';
import TransactionReportRequestDataDto from './model/TransactionReportRequestDataDto';
import ValidationErrorDto from './model/ValidationErrorDto';
import WalletDto from './model/WalletDto';
import WalletRequestDto from './model/WalletRequestDto';
import ChannelsApi from './api/ChannelsApi';
import CurrenciesApi from './api/CurrenciesApi';
import MerchantIDsApi from './api/MerchantIDsApi';
import PaymentsApi from './api/PaymentsApi';
import TradingAndConversionsApi from './api/TradingAndConversionsApi';
import WalletsApi from './api/WalletsApi';


/**
* The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, and digital wallet transactions..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var BvnkApiEndpoints = require('index'); // See note below*.
* var xxxSvc = new BvnkApiEndpoints.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new BvnkApiEndpoints.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new BvnkApiEndpoints.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new BvnkApiEndpoints.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AcceptedQuoteDto model constructor.
     * @property {module:model/AcceptedQuoteDto}
     */
    AcceptedQuoteDto,

    /**
     * The AccountMethodDto model constructor.
     * @property {module:model/AccountMethodDto}
     */
    AccountMethodDto,

    /**
     * The AlternativeAddressDto model constructor.
     * @property {module:model/AlternativeAddressDto}
     */
    AlternativeAddressDto,

    /**
     * The BalanceDto model constructor.
     * @property {module:model/BalanceDto}
     */
    BalanceDto,

    /**
     * The ClientValidationErrorDto model constructor.
     * @property {module:model/ClientValidationErrorDto}
     */
    ClientValidationErrorDto,

    /**
     * The CryptoAddressDto model constructor.
     * @property {module:model/CryptoAddressDto}
     */
    CryptoAddressDto,

    /**
     * The CurrencyDto model constructor.
     * @property {module:model/CurrencyDto}
     */
    CurrencyDto,

    /**
     * The CurrencyFiatDto model constructor.
     * @property {module:model/CurrencyFiatDto}
     */
    CurrencyFiatDto,

    /**
     * The CurrencyOptions model constructor.
     * @property {module:model/CurrencyOptions}
     */
    CurrencyOptions,

    /**
     * The CurrencyProtocol model constructor.
     * @property {module:model/CurrencyProtocol}
     */
    CurrencyProtocol,

    /**
     * The DirectionDto model constructor.
     * @property {module:model/DirectionDto}
     */
    DirectionDto,

    /**
     * The ExchangeRateDto model constructor.
     * @property {module:model/ExchangeRateDto}
     */
    ExchangeRateDto,

    /**
     * The ExternalCurrencyWithdrawalParameter model constructor.
     * @property {module:model/ExternalCurrencyWithdrawalParameter}
     */
    ExternalCurrencyWithdrawalParameter,

    /**
     * The FeeDto model constructor.
     * @property {module:model/FeeDto}
     */
    FeeDto,

    /**
     * The FeesDto model constructor.
     * @property {module:model/FeesDto}
     */
    FeesDto,

    /**
     * The FormDto model constructor.
     * @property {module:model/FormDto}
     */
    FormDto,

    /**
     * The GatewayTransactionDto model constructor.
     * @property {module:model/GatewayTransactionDto}
     */
    GatewayTransactionDto,

    /**
     * The MerchantChannelDto model constructor.
     * @property {module:model/MerchantChannelDto}
     */
    MerchantChannelDto,

    /**
     * The MerchantChannelPaymentDto model constructor.
     * @property {module:model/MerchantChannelPaymentDto}
     */
    MerchantChannelPaymentDto,

    /**
     * The MerchantChannelRequestDto model constructor.
     * @property {module:model/MerchantChannelRequestDto}
     */
    MerchantChannelRequestDto,

    /**
     * The MerchantDto model constructor.
     * @property {module:model/MerchantDto}
     */
    MerchantDto,

    /**
     * The MerchantIdCreateRequest model constructor.
     * @property {module:model/MerchantIdCreateRequest}
     */
    MerchantIdCreateRequest,

    /**
     * The MerchantIdCreateRequestWallet model constructor.
     * @property {module:model/MerchantIdCreateRequestWallet}
     */
    MerchantIdCreateRequestWallet,

    /**
     * The NetworkFeeDto model constructor.
     * @property {module:model/NetworkFeeDto}
     */
    NetworkFeeDto,

    /**
     * The PayAmountsDto model constructor.
     * @property {module:model/PayAmountsDto}
     */
    PayAmountsDto,

    /**
     * The PayInDetailDto model constructor.
     * @property {module:model/PayInDetailDto}
     */
    PayInDetailDto,

    /**
     * The PayInInstructionDto model constructor.
     * @property {module:model/PayInInstructionDto}
     */
    PayInInstructionDto,

    /**
     * The PayInMethodDto model constructor.
     * @property {module:model/PayInMethodDto}
     */
    PayInMethodDto,

    /**
     * The PayOutDetailDto model constructor.
     * @property {module:model/PayOutDetailDto}
     */
    PayOutDetailDto,

    /**
     * The PayOutInstructionDto model constructor.
     * @property {module:model/PayOutInstructionDto}
     */
    PayOutInstructionDto,

    /**
     * The PayOutMethodDto model constructor.
     * @property {module:model/PayOutMethodDto}
     */
    PayOutMethodDto,

    /**
     * The PayRequestDto model constructor.
     * @property {module:model/PayRequestDto}
     */
    PayRequestDto,

    /**
     * The PaymentLegDto model constructor.
     * @property {module:model/PaymentLegDto}
     */
    PaymentLegDto,

    /**
     * The PaymentStatusDto model constructor.
     * @property {module:model/PaymentStatusDto}
     */
    PaymentStatusDto,

    /**
     * The QuoteDto model constructor.
     * @property {module:model/QuoteDto}
     */
    QuoteDto,

    /**
     * The QuoteRequestDto model constructor.
     * @property {module:model/QuoteRequestDto}
     */
    QuoteRequestDto,

    /**
     * The ServerErrorDto model constructor.
     * @property {module:model/ServerErrorDto}
     */
    ServerErrorDto,

    /**
     * The SummaryPaymentDto model constructor.
     * @property {module:model/SummaryPaymentDto}
     */
    SummaryPaymentDto,

    /**
     * The TransactionReportDto model constructor.
     * @property {module:model/TransactionReportDto}
     */
    TransactionReportDto,

    /**
     * The TransactionReportRequestDataDto model constructor.
     * @property {module:model/TransactionReportRequestDataDto}
     */
    TransactionReportRequestDataDto,

    /**
     * The ValidationErrorDto model constructor.
     * @property {module:model/ValidationErrorDto}
     */
    ValidationErrorDto,

    /**
     * The WalletDto model constructor.
     * @property {module:model/WalletDto}
     */
    WalletDto,

    /**
     * The WalletRequestDto model constructor.
     * @property {module:model/WalletRequestDto}
     */
    WalletRequestDto,

    /**
    * The ChannelsApi service constructor.
    * @property {module:api/ChannelsApi}
    */
    ChannelsApi,

    /**
    * The CurrenciesApi service constructor.
    * @property {module:api/CurrenciesApi}
    */
    CurrenciesApi,

    /**
    * The MerchantIDsApi service constructor.
    * @property {module:api/MerchantIDsApi}
    */
    MerchantIDsApi,

    /**
    * The PaymentsApi service constructor.
    * @property {module:api/PaymentsApi}
    */
    PaymentsApi,

    /**
    * The TradingAndConversionsApi service constructor.
    * @property {module:api/TradingAndConversionsApi}
    */
    TradingAndConversionsApi,

    /**
    * The WalletsApi service constructor.
    * @property {module:api/WalletsApi}
    */
    WalletsApi
};
