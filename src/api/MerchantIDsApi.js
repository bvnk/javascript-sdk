/**
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, and digital wallet transactions.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClientValidationErrorDto from '../model/ClientValidationErrorDto';
import MerchantDto from '../model/MerchantDto';
import MerchantIdCreateRequest from '../model/MerchantIdCreateRequest';

/**
* MerchantIDs service.
* @module api/MerchantIDsApi
* @version 1.0.1
*/
export default class MerchantIDsApi {

    /**
    * Constructs a new MerchantIDsApi. 
    * @alias module:api/MerchantIDsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the merchantIdCreate operation.
     * @callback module:api/MerchantIDsApi~merchantIdCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MerchantDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Merchant ID
     * Generate a Merchant ID for your account to process pay-ins and pay-outs through our API.  A Merchant ID is essential as it designates the account wallet where incoming pay-ins will be settled. For instance, if a Merchant ID is associated with a EUR wallet ID, any incoming USDT payment will be automatically converted to EUR and deposited in the designated EUR wallet.  Vice versa, any outgoing USDT payment will be automatically converted and withdrawn from the designated EUR wallet.  For further information, please visit https://docs.bvnk.com/docs/creating-your-first-merchant to learn more about creating your first Merchant ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/MerchantIdCreateRequest} [merchantIdCreateRequest] 
     * @param {module:api/MerchantIDsApi~merchantIdCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MerchantDto}
     */
    merchantIdCreate(opts, callback) {
      opts = opts || {};
      let postBody = opts['merchantIdCreateRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Hawk'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MerchantDto;
      return this.apiClient.callApi(
        '/api/v1/merchant', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the merchantIdList operation.
     * @callback module:api/MerchantIDsApi~merchantIdListCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MerchantDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Merchant IDs
     * Retrieves merchant IDs setup on your account.
     * @param {module:api/MerchantIDsApi~merchantIdListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MerchantDto>}
     */
    merchantIdList(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Hawk'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MerchantDto];
      return this.apiClient.callApi(
        '/api/v1/merchant', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
