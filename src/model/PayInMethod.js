/**
 * BVNK API Endpoints
 * The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountMethod from './AccountMethod';

/**
 * The PayInMethod model module.
 * @module model/PayInMethod
 * @version 1.0.1
 */
class PayInMethod {
    /**
     * Constructs a new <code>PayInMethod</code>.
     * @alias module:model/PayInMethod
     */
    constructor() { 
        
        PayInMethod.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PayInMethod</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayInMethod} obj Optional instance to populate.
     * @return {module:model/PayInMethod} The populated <code>PayInMethod</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayInMethod();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('settlementCurrency')) {
                obj['settlementCurrency'] = ApiClient.convertToType(data['settlementCurrency'], 'String');
            }
            if (data.hasOwnProperty('requestedCurrency')) {
                obj['requestedCurrency'] = ApiClient.convertToType(data['requestedCurrency'], 'String');
            }
            if (data.hasOwnProperty('estimatedExchangeRate')) {
                obj['estimatedExchangeRate'] = ApiClient.convertToType(data['estimatedExchangeRate'], 'Number');
            }
            if (data.hasOwnProperty('accountMethods')) {
                obj['accountMethods'] = ApiClient.convertToType(data['accountMethods'], [AccountMethod]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayInMethod</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayInMethod</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['settlementCurrency'] && !(typeof data['settlementCurrency'] === 'string' || data['settlementCurrency'] instanceof String)) {
            throw new Error("Expected the field `settlementCurrency` to be a primitive type in the JSON string but got " + data['settlementCurrency']);
        }
        // ensure the json data is a string
        if (data['requestedCurrency'] && !(typeof data['requestedCurrency'] === 'string' || data['requestedCurrency'] instanceof String)) {
            throw new Error("Expected the field `requestedCurrency` to be a primitive type in the JSON string but got " + data['requestedCurrency']);
        }
        if (data['accountMethods']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accountMethods'])) {
                throw new Error("Expected the field `accountMethods` to be an array in the JSON data but got " + data['accountMethods']);
            }
            // validate the optional field `accountMethods` (array)
            for (const item of data['accountMethods']) {
                AccountMethod.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
PayInMethod.prototype['id'] = undefined;

/**
 * @member {String} code
 */
PayInMethod.prototype['code'] = undefined;

/**
 * @member {String} settlementCurrency
 */
PayInMethod.prototype['settlementCurrency'] = undefined;

/**
 * @member {String} requestedCurrency
 */
PayInMethod.prototype['requestedCurrency'] = undefined;

/**
 * @member {Number} estimatedExchangeRate
 */
PayInMethod.prototype['estimatedExchangeRate'] = undefined;

/**
 * @member {Array.<module:model/AccountMethod>} accountMethods
 */
PayInMethod.prototype['accountMethods'] = undefined;






export default PayInMethod;

